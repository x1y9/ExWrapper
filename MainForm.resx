<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAGEHAABhBwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgAAAFMAAABkAAAAYwAAAGMAAABjAAAAYwAA
        AGMAAABjAAAAYwAAAGMAAABjAAAAYwAAAGMAAABjAAAAYwAAAGMAAABjAAAAYwAAAGQAAABTAAAACgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmEBAQ5FJSUf9aWln/WlpZ/1pa
        Wf9aWln/WlpZ/1paWf9aWln/WlpZ/1paWf9aWln/WlpZ/1paWf9aWln/WlpZ/1paWf9aWln/UlJR/xAQ
        EOQAAAAmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgqKSnj2NfW/e3s
        6//s6+r/7Ovq/+zr6v/s6+r/7Ovq/+zr6v/s6+r/7Ovq/+zr6v/s6+r/7Ovq/+zr6v/s6+r/7Ovq/+3s
        6//Y19b9Kikp4wAAACgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAATxwb
        HOqWlJb9paOl/6SipP+koqT/pKKk/6SipP+koqT/pKKk/6SipP+koqT/pKKk/6SipP+koqT/pKKk/6Si
        pP+koqT/paOl/5aUlv0cGxzqAAAATwAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIQIE
        AKUPHgDrGDAB/Rw1Bf8cNQX/HDUF/xw1Bf8cNQX/HDUF/xw1Bf8cNQX/HDUF/xw1Bf8cNQX/HDUF/xw1
        Bf8cNQX/HDUF/xw1Bf8cNQX/HDUF/xgwAf0PHgDrAgQApQAAACEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAoBAwCoJEoA/0qXAP5PogD/T6IA/0+iAP9PogD/T6IA/0+iAP9PogD/T6IA/0+iAP9PogD/T6IA/0+i
        AP9PogD/T6IA/0+iAP9PogD/T6IA/0+iAP9PogD/T6IA/0qXAP4kSQD/AQMAqAAAAAoAAAAAAAAAAAAA
        AAAAAAAAAAAANxAhAOxKmQD9UqgA/1GmAP9RpgD/UaYA/0+jAP9PowD/T6MA/0+jAP9PogD/T6QA/1Gn
        AP9RpwD/T6QA/0+jAP9PowD/T6MA/0+jAP9PowD/UaUA/1GmAP9RpgD/UqgA/0qYAP0QIQDsAAAANgAA
        AAAAAAAAAAAAAAAAAAAAAABPGjUA9lCkAP5RpgD/UaYA/1KnAP9HkgD/HDoA/xcvAP8XLwD/GTMA/ydP
        AP8cOQD/RY0A/0SMAP8bOAD/Ll8A/x07AP8XLwD/Fy8A/xgyAP9AhAD/UqgA/1GmAP9RpgD/UKQA/ho1
        APYAAABPAAAAAAAAAAAAAAAAAAAAAAAAAFEbNgD2UKQA/lGmAP9RpgD/UqgA/0OJAP8HDwD/IUQA/zBj
        AP8wYwD/PX0A/xAhAP8bNwD/GjYA/xEjAP86dgD/CBEA/yFEAP8wYwD/MGIA/0eSAP9SpwD/UaYA/1Gm
        AP9QpAD+GzYA9gAAAFEAAAAAAAAAAAAAAAAAAAAAAAAAURs2APZQpAD+UaYA/1GmAP9SqAD/Q4kA/wgQ
        AP8jRgD/MWUA/zZvAP9PowD/OHMA/wUKAP8FCwD/OncA/0SMAP8IEAD/IkYA/zFlAP82bwD/TqAA/1Gm
        AP9RpgD/UaYA/1CkAP4bNgD2AAAAUQAAAAAAAAAAAAAAAAAAAAAAAABRGzYA9lCkAP5RpgD/UaYA/1Ko
        AP9DigD/Bw4A/xAhAP8XMAD/IEMA/02dAP9DiQD/CA8A/wcQAP9DiQD/RIwA/wcPAP8QIQD/FzAA/yBC
        AP9MmwD/UacA/1GmAP9RpgD/UKQA/hs2APYAAABRAAAAAAAAAAAAAAAAAAAAAAAAAFEbNgD2UKQA/lGm
        AP9RpgD/UqgA/0OJAP8IEAD/JUsA/zVrAP82bwD/SJQA/x07AP8PHwD/ECAA/x07AP9AgwD/CBAA/yRK
        AP81awD/Nm4A/0uaAP9RpwD/UaYA/1GmAP9QpAD+GzYA9gAAAFEAAAAAAAAAAAAAAAAAAAAAAAAAURs2
        APZQpAD+UaYA/1GmAP9SpwD/Ro8A/xUsAP8RIgD/EiQA/xYtAP8yZgD/FSwA/zt4AP87egD/FSwA/zRr
        AP8WLgD/ESIA/xIkAP8VKwD/RIsA/1KoAP9RpgD/UaYA/1CkAP4bNgD2AAAAUQAAAAAAAAAAAAAAAAAA
        AAAAAABPGjUA9lCkAP5RpgD/UaYA/1GmAP9QpAD/TJ0A/0ycAP9MnAD/TJ0A/06fAP9MnQD/UaUA/1Gl
        AP9MnQD/Tp8A/02dAP9MnAD/TJwA/0ydAP9QpAD/UaYA/1GmAP9RpgD/UKQA/ho1APYAAABPAAAAAAAA
        AAAAAAAAAAAAAAAAADcQIQDsSpkA/lKoAP9RpgD/UaYA/1GmAP9RpwD/UacA/1GnAP9RpwD/UacA/1Gn
        AP9RpgD/UaYA/1GnAP9RpwD/UacA/1GnAP9RpwD/UacA/1GmAP9RpgD/UaYA/1KoAP9KmQD+ECEA7AAA
        ADYAAAAAAAAAAAAAAAAAAAAAAAAACgEDAKgkSgD/SpcA/k+iAP9PogD/T6IA/0+iAP9PogD/T6IA/0+i
        AP9PogD/T6IA/0+iAP9PogD/T6IA/0+iAP9PogD/T6IA/0+iAP9PogD/T6IA/0+iAP9PogD/SpcA/iRK
        AP8BAwCoAAAACgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIQIEAKUPHgDrGDAB/Rw1Bf8cNQX/HDUF/xw1
        Bf8cNQX/HDUF/xw1Bf8cNQX/HDUF/xw1Bf8cNQX/HDUF/xw1Bf8cNQX/HDUF/xw1Bf8cNQX/HDUF/xgw
        Af0PHgDrAgQApQAAACEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAE8cGxzqlpSW/aWj
        pf+koqT/pKKk/6SipP+koqT/pKKk/6SipP+koqT/pKKk/6SipP+koqT/pKKk/6SipP+koqT/pKKk/6Wj
        pf+WlJb9HBsc6gAAAE8AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKCop
        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
        AP/4AAH/+AAD//gAB//4AA//+AAf//////8=
</value>
  </data>
</root>